#include<bits/stdc++.h>
void dfs(int node,vector<int>graph[],vector<int>&vis,
         stack<int>&st){
    vis[node]=1;
    for(auto i:graph[node]){
        if(!vis[i])
            dfs(i,graph,vis,st);
    }st.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    vector<int>graph[v+1];
    vector<int>vis(v+1,0);
    for(int i=0;i<e;++i){
        int a=edges[i][0];
        int b=edges[i][1];
        graph[a].push_back(b);
    }stack<int>st;
    for(int i=0;i<v;++i){
        if(!vis[i])
            dfs(i,graph,vis,st);
    }
    vector<int>ans;
    while(!st.empty()){
        ans.push_back(st.top());
        st.pop();
    }return ans;
}
