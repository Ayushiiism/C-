bool dfs(int node,int par,vector<int>graph[],vector<int>&vis){
    vis[node]=1;
    for(auto i:graph[node]){
        if(vis[i]==0){
            if(dfs(i,node,graph,vis)) return 1;
        }else if(i!=par) return 1;
    }return 0;
}
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    vector<int> graph[n+1];
    vector<int>vis(n+1,0);
    for(int i=0;i<m;++i){
        int a=edges[i][0];
        int b=edges[i][1];
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    for(auto i=1;i<=n;++i){
        if(!vis[i]){
            if(dfs(i,-1,graph,vis)){
                return "Yes";
            }
        }
    }return "No";
}
