/*****************************************************

    Following is the Binary Tree node structure:
    
    class BinaryTreeNode {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
        
        ~BinaryTreeNode() {
            if(left) 
                delete left;
            if(right) 
                delete right;
        }
    };

******************************************************/
bool solve(BinaryTreeNode<int>* a,BinaryTreeNode<int>* b){
  
         if(a==NULL && b==NULL){
             return true;
         }
    
    if(a==NULL || b==NULL)
        return false;
    if(a->data!=b->data)
        return false;
    
    return solve(a->left,b->right) && solve(a->right,b->left);
}
bool isSymmetric(BinaryTreeNode<int>* root)
{
    if(root==NULL || root->left==NULL && root->right==NULL)
        return true;
    return solve(root->left,root->right);  

}
