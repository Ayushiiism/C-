#define ll long long
vector<int> dijkstra(vector<vector<int>> &vec, int vertices, int edges, int source) {
    int n=vertices;
    vector<pair<int,int> > graph[n+1];
    for(int i=0;i<edges;++i){
        int a=vec[i][0];
        int b=vec[i][1];
        int wt=vec[i][2];
        graph[a].push_back({b,wt});
        graph[b].push_back({a,wt});
    }
    priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int>>> pq;
    vector<int>dist(n,INT_MAX);
    dist[source]=0;
    pq.push({0,source});
    while(!pq.empty()){
        int dis=pq.top().first;
        int prev=pq.top().second;
        pq.pop();
        for(auto i:graph[prev]){
            int next=i.first;
            int nextdis=i.second;
            if(dist[next]>dist[prev]+nextdis){
                dist[next]=dist[prev]+nextdis;
                pq.push({dist[next],next});
            }
        }
    }
    return dist;
}
