#include<bits/stdc++.h>
vector<int> KMostFrequent(int n, int k, vector<int> &arr)
{
    unordered_map<int,int>mp;
    for(int i=0;i<n;++i){
        mp[arr[i]]++;
    }
    // create min heap
  priority_queue<pair<int,int>, vector<pair<int,int>>,greater<pair<int,int>>>q;
    for(auto i=mp.begin();i!=mp.end();i++)
    {
        q.push({i->second,i->first});
        
        if(q.size()>k)
        {
            q.pop();
        }
    }
    vector<int>ans;
    while(!q.empty()){
        ans.push_back(q.top().second);
        q.pop();
    }
    sort(ans.begin(),ans.end());
    return ans;
}
