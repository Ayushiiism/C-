#include<bits/stdc++.h>
#define ll long long int
ll dp[1001][1001];
int solve(int n,int m,vector<vector<int>> &grid){
    if(n==0&&m==0){
        return grid[n][m];
    }if(n<0||m<0)
        return 1e9;
    if(dp[n][m]!=-1) return dp[n][m];
    ll up=grid[n][m]+solve(n-1,m,grid);
    ll lft=grid[n][m]+solve(n,m-1,grid);
    
    return dp[n][m]=min(up,lft);
    
}
int minSumPath(vector<vector<int>> &grid) {
    memset(dp,-1,sizeof(dp));
    int n=grid.size();
    int m=grid[0].size();
    return solve(n-1,m-1,grid);
}
